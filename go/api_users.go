/*
 * Opal Custom App Connector API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"strconv"

	"github.com/gin-gonic/gin"
	authentik "goauthentik.io/api/v3"
)

type UsersAPI struct {
}

// Get /users
func (api *UsersAPI) GetUsers(c *gin.Context) {
	authentik, err := NewAuthentikClient()
	if err != nil {
		c.JSON(500, buildRespFromErr(err))
		return
	}

	authentikUsers, nextCursor, err := authentik.PaginatedListUsers(c)
	if err != nil {
		c.JSON(500, buildRespFromErr(err))
		return
	}

	users := make([]User, 0)
	for _, authentikUser := range authentikUsers {
		user := toOpalUser(authentikUser)
		if user != nil {
			users = append(users, *user)
		}
	}

	c.JSON(200, &UsersResponse{
		Users:      users,
		NextCursor: &nextCursor,
	})
}

func toOpalUser(user authentik.User) *User {
	if user.GetEmail() == "" {
		return nil
	}

	return &User{
		Id:    strconv.Itoa(int(user.GetPk())),
		Email: user.GetEmail(),
	}
}
